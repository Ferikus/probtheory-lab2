# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'rvmodeling.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sys
import device


class ResultWindowN1(QtWidgets.QWidget):
    def __init__(self, results):
        super().__init__()
        self.setWindowTitle("Результаты розыгрыша")
        self.setGeometry(100, 100, 400, 200)

        layout = QtWidgets.QVBoxLayout(self)

        self.table = QtWidgets.QTableWidget(self)
        self.table.setRowCount(1)
        self.table.setColumnCount(len(results))
        self.table.setHorizontalHeaderLabels([f"x({i + 1})" for i in range(len(results))])

        for i, value in enumerate(results):
            self.table.setItem(0, i, QtWidgets.QTableWidgetItem(f"{value:.4f}"))

        layout.addWidget(self.table)
        self.setLayout(layout)


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(10)
        MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(40, 140, 721, 71))
        self.label.setWordWrap(True)
        self.label.setObjectName("label")
        self.label_title = QtWidgets.QLabel(self.centralwidget)
        self.label_title.setEnabled(True)
        self.label_title.setGeometry(QtCore.QRect(130, 30, 541, 71))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_title.setFont(font)
        self.label_title.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_title.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_title.setFrameShadow(QtWidgets.QFrame.Plain)
        self.label_title.setTextFormat(QtCore.Qt.AutoText)
        self.label_title.setAlignment(QtCore.Qt.AlignCenter)
        self.label_title.setObjectName("label_title")
        self.label_formula = QtWidgets.QLabel(self.centralwidget)
        self.label_formula.setGeometry(QtCore.QRect(40, 230, 501, 16))
        self.label_formula.setObjectName("label_formula")
        self.label_var = QtWidgets.QLabel(self.centralwidget)
        self.label_var.setGeometry(QtCore.QRect(40, 120, 81, 16))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_var.setFont(font)
        self.label_var.setObjectName("label_var")
        self.paramBox = QtWidgets.QGroupBox(self.centralwidget)
        self.paramBox.setGeometry(QtCore.QRect(30, 270, 731, 101))
        self.paramBox.setObjectName("paramBox")
        self.label_experiments_count = QtWidgets.QLabel(self.paramBox)
        self.label_experiments_count.setGeometry(QtCore.QRect(380, 60, 161, 16))
        self.label_experiments_count.setObjectName("label_experiments_count")
        self.label_variance = QtWidgets.QLabel(self.paramBox)
        self.label_variance.setGeometry(QtCore.QRect(60, 60, 81, 16))
        self.label_variance.setObjectName("label_variance")
        self.label_subdevice_count = QtWidgets.QLabel(self.paramBox)
        self.label_subdevice_count.setGeometry(QtCore.QRect(380, 30, 131, 16))
        self.label_subdevice_count.setObjectName("label_subdevice_count")
        self.label_mean = QtWidgets.QLabel(self.paramBox)
        self.label_mean.setGeometry(QtCore.QRect(60, 30, 71, 16))
        self.label_mean.setObjectName("label_mean")
        self.lineEdit_mean = QtWidgets.QLineEdit(self.paramBox)
        self.lineEdit_mean.setGeometry(QtCore.QRect(160, 30, 113, 20))
        self.lineEdit_mean.setObjectName("lineEdit_mean")
        self.lineEdit_variance = QtWidgets.QLineEdit(self.paramBox)
        self.lineEdit_variance.setGeometry(QtCore.QRect(160, 60, 113, 20))
        self.lineEdit_variance.setObjectName("lineEdit_variance")
        self.lineEdit_subdevice_count = QtWidgets.QLineEdit(self.paramBox)
        self.lineEdit_subdevice_count.setGeometry(QtCore.QRect(560, 30, 113, 20))
        self.lineEdit_subdevice_count.setObjectName("lineEdit_subdevice_count")
        self.lineEdit_experiments_count = QtWidgets.QLineEdit(self.paramBox)
        self.lineEdit_experiments_count.setGeometry(QtCore.QRect(560, 60, 113, 20))
        self.lineEdit_experiments_count.setObjectName("lineEdit_experiments_count")
        self.btn_1 = QtWidgets.QPushButton(self.centralwidget)
        self.btn_1.setGeometry(QtCore.QRect(180, 410, 431, 41))
        self.btn_1.setObjectName("btn_1")
        self.btn_2 = QtWidgets.QPushButton(self.centralwidget)
        self.btn_2.setGeometry(QtCore.QRect(180, 460, 431, 41))
        self.btn_2.setObjectName("btn_2")
        self.btn_3 = QtWidgets.QPushButton(self.centralwidget)
        self.btn_3.setGeometry(QtCore.QRect(180, 510, 431, 41))
        self.btn_3.setObjectName("btn_3")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # Обработка кнопок
        self.btn_1.clicked.connect(self.n1_simulate_random_variables)

    def n1_simulate_random_variables(self):
        try:
            n = int(self.lineEdit_subdevice_count.text())
            choice = self.get_distribution_choice()

            if choice == 'Q':
                Q = float(self.lineEdit_mean.text())
                device_instance = device.Device(n, expected=Q)
            elif choice == 'R':
                R = float(self.lineEdit_variance.text())
                device_instance = device.Device(n, variance=R)

            k = int(self.lineEdit_experiments_count.text())

            results = device_instance.RandomDraw(k)
            self.result_window = ResultWindowN1(results)
            self.result_window.show()

        except ValueError as e:
            QtWidgets.QMessageBox.critical(MainWindow, "Ошибка ввода", str(e))

    def get_distribution_choice(self):
        if self.lineEdit_mean.text() and not self.lineEdit_variance.text():
            return 'Q'
        elif self.lineEdit_variance.text() and not self.lineEdit_mean.text():
            return 'R'
        else:
            raise ValueError("Необходимо задать либо Q, либо R.")

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Теория вероятности. Л/Р №2."))
        self.label.setText(_translate("MainWindow",
                                      "Устройство состоит из N>>1 дублирующих приборов. Каждый следующий прибор включается после выхода из строя предыдущего. Время безотказной работы каждого прибора — положительная с.в. со средним 16 Q и дисперсией R. Плотность распределения выбрать по аналогии с приведёнными на рисунках на с. 15. С.в. η — время безотказной работы всего устройства."))
        self.label_title.setText(_translate("MainWindow", "Лабораторная работа №2.\n"
                                                          "Моделирование случайных величин\n"
                                                          "и проверка гипотез о виде распределения."))
        self.label_formula.setText(_translate("MainWindow", "Функция плотности — экспоненциальная."))
        self.label_var.setText(_translate("MainWindow", "Вариант 18"))
        self.paramBox.setTitle(_translate("MainWindow", "Ввод параметров"))
        self.label_experiments_count.setText(_translate("MainWindow", "Количество экспериментов"))
        self.label_variance.setText(_translate("MainWindow", "Дисперсия R"))
        self.label_subdevice_count.setText(_translate("MainWindow", "Количество приборов N"))
        self.label_mean.setText(_translate("MainWindow", "Среднее Q"))
        self.btn_1.setText(_translate("MainWindow", "1. Моделирование случайных величин"))
        self.btn_2.setText(_translate("MainWindow", "2. ..."))
        self.btn_3.setText(_translate("MainWindow", "3. ..."))


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
